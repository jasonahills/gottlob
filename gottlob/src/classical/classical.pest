binary_op = _{ and | or | conditional | biconditional }
and = { "^" }
or = { "v" }
conditional = { "->" }
biconditional = { "<->" }

negated = { "~" ~  expr }
grouped = { "(" ~ expr ~ ")" }
term = { grouped | negated | literal }
literal = { 'a'..'u' | 'w'..'z' }

expr = { term ~ (binary_op ~ term)* }

whole_expr = _{ SOI ~ expr ~ EOI }

WHITESPACE = _{ " " | "\t" }